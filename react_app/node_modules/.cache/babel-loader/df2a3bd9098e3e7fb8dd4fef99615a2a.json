{"ast":null,"code":"var _jsxFileName = \"/Users/joeclark-mcghee/Documents/code/computer-science/project/sql-joe-frontend/src/pages/ConnectToDB.js\",\n    _s = $RefreshSig$();\n\nimport { LineBreak } from \"../components/LineBreak\";\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ConnectToDB() {\n  _s();\n\n  const hostInputRef = useRef();\n  const portInputRef = useRef();\n  const databaseInputRef = useRef();\n  const userInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  function submit(event) {\n    event.preventDefault();\n    const submittedData = {\n      host: hostInputRef.current.value,\n      port: portInputRef.current.value,\n      database: databaseInputRef.current.value,\n      user: userInputRef.current.value,\n      password: passwordInputRef.current.value\n    };\n    fetch('http://127.0.0.1:8000/api/v1/database-connections/set-database-config/', {\n      request: \"POST\",\n      body: JSON.stringify(submittedData),\n      headers: {\n        'Content-Type': \"application/json\"\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Connect To Database\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LineBreak, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: true,\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"host\",\n          children: \"Host: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"host\",\n          ref: hostInputRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"port\",\n          children: \"Port: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"port\",\n          ref: portInputRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"database\",\n          children: \"Database: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"database\",\n          ref: databaseInputRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"user\",\n          children: \"User: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"user\",\n          ref: userInputRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          ref: passwordInputRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Connect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ConnectToDB, \"myHAjS2N+xYvpB8ILnzQ7A7Q+P4=\");\n\n_c = ConnectToDB;\nexport default ConnectToDB;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConnectToDB\");","map":{"version":3,"sources":["/Users/joeclark-mcghee/Documents/code/computer-science/project/sql-joe-frontend/src/pages/ConnectToDB.js"],"names":["LineBreak","useRef","ConnectToDB","hostInputRef","portInputRef","databaseInputRef","userInputRef","passwordInputRef","submit","event","preventDefault","submittedData","host","current","value","port","database","user","password","fetch","request","body","JSON","stringify","headers"],"mappings":"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","sourcesContent":["import {LineBreak} from \"../components/LineBreak\";\nimport {useRef} from \"react\";\n\n\nfunction ConnectToDB() {\n    const hostInputRef = useRef()\n    const portInputRef = useRef()\n    const databaseInputRef = useRef()\n    const userInputRef = useRef()\n    const passwordInputRef = useRef()\n\n    function submit(event) {\n        event.preventDefault();\n\n        const submittedData = {\n            host: hostInputRef.current.value,\n            port: portInputRef.current.value,\n            database: databaseInputRef.current.value,\n            user: userInputRef.current.value,\n            password: passwordInputRef.current.value\n        }\n\n        fetch('http://127.0.0.1:8000/api/v1/database-connections/set-database-config/',\n            {\n                request: \"POST\",\n                body: JSON.stringify(submittedData),\n                headers: {\n                    'Content-Type': \"application/json\"\n                }\n            }\n        );\n    }\n\n    return (\n        <div className='card'>\n            <h2>Connect To Database</h2>\n            <LineBreak/>\n            <form className onSubmit={submit}>\n                <div>\n                    <label htmlFor=\"host\">Host: </label>\n                    <input type=\"text\" id=\"host\" ref={hostInputRef} required/>\n                </div>\n                <div>\n                    <label htmlFor=\"port\">Port: </label>\n                    <input type=\"text\" id=\"port\" ref={portInputRef} required/>\n                </div>\n                <div>\n                    <label htmlFor=\"database\">Database: </label>\n                    <input type=\"text\" id=\"database\" ref={databaseInputRef} required/>\n                </div>\n                <div>\n                    <label htmlFor=\"user\">User: </label>\n                    <input type=\"text\" id=\"user\" ref={userInputRef} required/>\n                </div>\n                <div>\n                    <label htmlFor=\"password\">Password: </label>\n                    <input type=\"password\" id=\"password\" ref={passwordInputRef} required/>\n                </div>\n                <div>\n                    <button>Connect</button>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default ConnectToDB;"]},"metadata":{},"sourceType":"module"}