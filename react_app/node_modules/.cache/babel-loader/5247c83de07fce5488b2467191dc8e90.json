{"ast":null,"code":"var _jsxFileName = \"/Users/joeclark-mcghee/Documents/code/computer-science/project/sql-joe-frontend/src/components/database_operations/ConnectionStatus.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { LineBreak } from \"../LineBreak\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ConnectionStatus() {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadedStatus, setLoadedStatus] = useState([]);\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:8000/api/v1/database-connections/get-status/\", {\n      headers: {\n        'Content-Type': \"application/json\",\n        'Authorization': \"token 09d7b34a1354d82b16851f29d8f7f981415b599\"\n      }\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      setIsLoading(false);\n      const x = [data.connection_status];\n      setLoadedStatus(x);\n    });\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(LineBreak, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loadedStatus\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ConnectionStatus, \"MlRK2mTRD+elamTmAhngCvBrXew=\");\n\n_c = ConnectionStatus;\nexport default ConnectionStatus;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConnectionStatus\");","map":{"version":3,"sources":["/Users/joeclark-mcghee/Documents/code/computer-science/project/sql-joe-frontend/src/components/database_operations/ConnectionStatus.js"],"names":["useEffect","useState","LineBreak","ConnectionStatus","isLoading","setIsLoading","loadedStatus","setLoadedStatus","fetch","headers","then","response","json","data","x","connection_status"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,SAAQC,SAAR,QAAwB,cAAxB;;;AAEA,SAASC,gBAAT,GAA4B;AAAA;;AAExB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,KAAK,CACD,+DADC,EACgE;AAC7DC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAiB;AAFZ;AADoD,KADhE,CAAL,CAOEC,IAPF,CAOQC,QAAD,IAAc;AACjB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,KATD,EASGF,IATH,CASSG,IAAD,IAAU;AACdR,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,YAAMS,CAAC,GAAG,CAACD,IAAI,CAACE,iBAAN,CAAV;AACAR,MAAAA,eAAe,CAACO,CAAD,CAAf;AACH,KAbD;AAeH,GAhBQ,EAgBN,EAhBM,CAAT;;AAkBA,MAAIV,SAAJ,EAAe;AACX,wBACI;AAAA,8BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAED,sBACI;AAAA,cACKE;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GArCQH,gB;;KAAAA,gB;AAuCT,eAAeA,gBAAf","sourcesContent":["import {useEffect, useState} from \"react\";\nimport {LineBreak} from \"../LineBreak\";\n\nfunction ConnectionStatus() {\n\n    const [isLoading, setIsLoading] = useState(true);\n    const [loadedStatus, setLoadedStatus] = useState([])\n\n    useEffect(() => {\n        fetch(\n            \"http://127.0.0.1:8000/api/v1/database-connections/get-status/\", {\n                headers: {\n                    'Content-Type': \"application/json\",\n                    'Authorization': \"token 09d7b34a1354d82b16851f29d8f7f981415b599\"\n                }\n            }\n        ).then((response) => {\n            return response.json();\n        }).then((data) => {\n            setIsLoading(false);\n            const x = [data.connection_status]\n            setLoadedStatus(x);\n        });\n\n    }, [])\n\n    if (isLoading) {\n        return (\n            <div>\n                <LineBreak/>\n                <p>Loading....</p>\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            {loadedStatus}\n        </div>\n    )\n}\n\nexport default ConnectionStatus;"]},"metadata":{},"sourceType":"module"}