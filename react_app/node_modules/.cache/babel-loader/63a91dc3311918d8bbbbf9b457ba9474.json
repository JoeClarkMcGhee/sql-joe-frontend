{"ast":null,"code":"var _jsxFileName = \"/Users/joeclark-mcghee/Documents/code/computer-science/project/sql-joe-frontend/src/components/database_operations/QueryDBForm.js\";\nimport { Component, useRef, useState } from \"react\";\nimport ResultsTable from \"./ResultsTable\";\nimport { LineBreak } from \"../LineBreak\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass QueryDBForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      queryResults: []\n    };\n  }\n\n  submit(event) {\n    event.preventDefault();\n    const submittedData = {\n      query: queryInputRef.current.value\n    };\n    fetch('http://127.0.0.1:8000/api/v1/database-connections/query-remote-db/', {\n      method: \"POST\",\n      body: JSON.stringify(submittedData),\n      headers: {\n        'Content-Type': \"application/json\"\n      }\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      setHasResults(true); // queryResults = data;\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"query-panel\",\n            children: \"Query Panel: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            rows: \"10\",\n            cols: \"50\",\n            id: \"query-panel\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LineBreak, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), this.state.queryResults.length > 0 ? /*#__PURE__*/_jsxDEV(ResultsTable, {\n        data: this.state.queryResults\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n} // function QueryDBForm() {\n//     // const queryInputRef = useRef();\n//     // const [hasResults, setHasResults] = useState(false);\n//     const queryResults = [\n//         {\n//             \"user_id\": 1,\n//             \"username\": \"user1\",\n//             \"email\": \"user1@email.com\"\n//         },\n//         {\n//             \"user_id\": 2,\n//             \"username\": \"user2\",\n//             \"email\": \"user2@email.com\"\n//         },\n//         {\n//             \"user_id\": 3,\n//             \"username\": \"user3\",\n//             \"email\": \"user3@email.com\"\n//         }\n//     ];\n//\n//\n//     function submit(event) {\n//         event.preventDefault();\n//\n//         const submittedData = {\n//             query: queryInputRef.current.value,\n//         }\n//\n//         fetch('http://127.0.0.1:8000/api/v1/database-connections/query-remote-db/',\n//             {\n//                 method: \"POST\",\n//                 body: JSON.stringify(submittedData),\n//                 headers: {\n//                     'Content-Type': \"application/json\"\n//                 }\n//             }\n//         ).then((response) => {\n//             return response.json();\n//         }).then((data) => {\n//             setHasResults(true)\n//             // queryResults = data;\n//         });\n//     }\n//\n//     return (\n//         <div>\n//             {/*<form onSubmit={submit}>*/}\n//             <form>\n//                 <div>\n//                     <label htmlFor=\"query-panel\">Query Panel: </label>\n//                     {/*<textarea rows=\"10\" cols=\"50\" id=\"query-panel\" ref={queryInputRef} required/>*/}\n//                     <textarea rows=\"10\" cols=\"50\" id=\"query-panel\" required/>\n//                 </div>\n//                 <br/>\n//                 <div>\n//                     <button className='btn'>Submit</button>\n//                 </div>\n//             </form>\n//             <LineBreak/>\n//             <ResultsTable data={queryResults}/>\n//         </div>\n//     );\n// }\n\n\nexport default QueryDBForm;","map":{"version":3,"sources":["/Users/joeclark-mcghee/Documents/code/computer-science/project/sql-joe-frontend/src/components/database_operations/QueryDBForm.js"],"names":["Component","useRef","useState","ResultsTable","LineBreak","QueryDBForm","constructor","props","state","queryResults","submit","event","preventDefault","submittedData","query","queryInputRef","current","value","fetch","method","body","JSON","stringify","headers","then","response","json","data","setHasResults","render","length"],"mappings":";AAAA,SAAQA,SAAR,EAAmBC,MAAnB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAAQC,SAAR,QAAwB,cAAxB;;;AAGA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAChCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE;AADL,KAAb;AAGH;;AAEDC,EAAAA,MAAM,CAACC,KAAD,EAAQ;AACVA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,aAAa,GAAG;AAClBC,MAAAA,KAAK,EAAEC,aAAa,CAACC,OAAd,CAAsBC;AADX,KAAtB;AAGAC,IAAAA,KAAK,CAAC,oEAAD,EACD;AACIC,MAAAA,MAAM,EAAE,MADZ;AAEIC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,aAAf,CAFV;AAGIU,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAHb,KADC,CAAL,CAQEC,IARF,CAQQC,QAAD,IAAc;AACjB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,KAVD,EAUGF,IAVH,CAUSG,IAAD,IAAU;AACdC,MAAAA,aAAa,CAAC,IAAD,CAAb,CADc,CAEd;AACH,KAbD;AAcH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BAEI;AAAA,gCACI;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAGI;AAAU,YAAA,IAAI,EAAC,IAAf;AAAoB,YAAA,IAAI,EAAC,IAAzB;AAA8B,YAAA,EAAE,EAAC,aAAjC;AAA+C,YAAA,QAAQ;AAAvD;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI;AAAA,iCACI;AAAQ,YAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAaI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAbJ,EAeQ,KAAKrB,KAAL,CAAWC,YAAX,CAAwBqB,MAAxB,GAAiC,CAAjC,gBACI,QAAC,YAAD;AAAc,QAAA,IAAI,EAAE,KAAKtB,KAAL,CAAWC;AAA/B;AAAA;AAAA;AAAA;AAAA,cADJ,GACqD,IAhB7D;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAqBH;;AApD+B,C,CAuDpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeJ,WAAf","sourcesContent":["import {Component, useRef, useState} from \"react\";\nimport ResultsTable from \"./ResultsTable\";\nimport {LineBreak} from \"../LineBreak\";\n\n\nclass QueryDBForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            queryResults: []\n        }\n    }\n\n    submit(event) {\n        event.preventDefault();\n\n        const submittedData = {\n            query: queryInputRef.current.value,\n        }\n        fetch('http://127.0.0.1:8000/api/v1/database-connections/query-remote-db/',\n            {\n                method: \"POST\",\n                body: JSON.stringify(submittedData),\n                headers: {\n                    'Content-Type': \"application/json\"\n                }\n            }\n        ).then((response) => {\n            return response.json();\n        }).then((data) => {\n            setHasResults(true)\n            // queryResults = data;\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                {/*<form onSubmit={this.submit}>*/}\n                <form>\n                    <div>\n                        <label htmlFor=\"query-panel\">Query Panel: </label>\n                        {/*<textarea rows=\"10\" cols=\"50\" id=\"query-panel\" ref={queryInputRef} required/>*/}\n                        <textarea rows=\"10\" cols=\"50\" id=\"query-panel\" required/>\n                    </div>\n                    <br/>\n                    <div>\n                        <button className='btn'>Submit</button>\n                    </div>\n                </form>\n                <LineBreak/>\n                {\n                    this.state.queryResults.length > 0 ?\n                        <ResultsTable data={this.state.queryResults}/> : null\n                }\n            </div>\n        );\n    }\n}\n\n// function QueryDBForm() {\n//     // const queryInputRef = useRef();\n//     // const [hasResults, setHasResults] = useState(false);\n//     const queryResults = [\n//         {\n//             \"user_id\": 1,\n//             \"username\": \"user1\",\n//             \"email\": \"user1@email.com\"\n//         },\n//         {\n//             \"user_id\": 2,\n//             \"username\": \"user2\",\n//             \"email\": \"user2@email.com\"\n//         },\n//         {\n//             \"user_id\": 3,\n//             \"username\": \"user3\",\n//             \"email\": \"user3@email.com\"\n//         }\n//     ];\n//\n//\n//     function submit(event) {\n//         event.preventDefault();\n//\n//         const submittedData = {\n//             query: queryInputRef.current.value,\n//         }\n//\n//         fetch('http://127.0.0.1:8000/api/v1/database-connections/query-remote-db/',\n//             {\n//                 method: \"POST\",\n//                 body: JSON.stringify(submittedData),\n//                 headers: {\n//                     'Content-Type': \"application/json\"\n//                 }\n//             }\n//         ).then((response) => {\n//             return response.json();\n//         }).then((data) => {\n//             setHasResults(true)\n//             // queryResults = data;\n//         });\n//     }\n//\n//     return (\n//         <div>\n//             {/*<form onSubmit={submit}>*/}\n//             <form>\n//                 <div>\n//                     <label htmlFor=\"query-panel\">Query Panel: </label>\n//                     {/*<textarea rows=\"10\" cols=\"50\" id=\"query-panel\" ref={queryInputRef} required/>*/}\n//                     <textarea rows=\"10\" cols=\"50\" id=\"query-panel\" required/>\n//                 </div>\n//                 <br/>\n//                 <div>\n//                     <button className='btn'>Submit</button>\n//                 </div>\n//             </form>\n//             <LineBreak/>\n//             <ResultsTable data={queryResults}/>\n//         </div>\n//     );\n// }\n\nexport default QueryDBForm;"]},"metadata":{},"sourceType":"module"}