{"ast":null,"code":"var _jsxFileName = \"/Users/joeclark-mcghee/Documents/code/computer-science/project/sql-joe-frontend/src/pages/ConnectToDB.js\",\n    _s = $RefreshSig$();\n\nimport { LineBreak } from \"../components/LineBreak\";\nimport { useRef } from \"react\";\nimport ConnectionStatus from \"../components/database_operations/ConnectionStatus\";\nimport CurrentConnectionConfig from \"../components/database_operations/CurrentConnectionConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ConnectToDB() {\n  _s();\n\n  const hostInputRef = useRef();\n  const portInputRef = useRef();\n  const databaseInputRef = useRef();\n  const userInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  function submit(event) {\n    event.preventDefault();\n    const submittedData = {\n      host: hostInputRef.current.value,\n      port: parseInt(portInputRef.current.value),\n      database: databaseInputRef.current.value,\n      user: userInputRef.current.value,\n      password: passwordInputRef.current.value\n    };\n    const token = sessionStorage.getItem('token');\n    const tokenStr = JSON.parse(token);\n    fetch('http://127.0.0.1:8000/api/v1/database-connections/set-database-config/', {\n      method: \"POST\",\n      body: JSON.stringify(submittedData),\n      headers: {\n        'Content-Type': \"application/json\",\n        'Authorization': \"token \" + tokenStr\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Connect To Database\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LineBreak, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"host\",\n          children: \"Host: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"host\",\n          ref: hostInputRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"port\",\n          children: \"Port: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"port\",\n          ref: portInputRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"database\",\n          children: \"Database: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"database\",\n          ref: databaseInputRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"user\",\n          children: \"User: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"user\",\n          ref: userInputRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          ref: passwordInputRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          children: \"Connect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LineBreak, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Current Connection Config\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CurrentConnectionConfig, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Connection Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ConnectionStatus, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ConnectToDB, \"myHAjS2N+xYvpB8ILnzQ7A7Q+P4=\");\n\n_c = ConnectToDB;\nexport default ConnectToDB;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConnectToDB\");","map":{"version":3,"sources":["/Users/joeclark-mcghee/Documents/code/computer-science/project/sql-joe-frontend/src/pages/ConnectToDB.js"],"names":["LineBreak","useRef","ConnectionStatus","CurrentConnectionConfig","ConnectToDB","hostInputRef","portInputRef","databaseInputRef","userInputRef","passwordInputRef","submit","event","preventDefault","submittedData","host","current","value","port","parseInt","database","user","password","token","sessionStorage","getItem","tokenStr","JSON","parse","fetch","method","body","stringify","headers"],"mappings":"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","sourcesContent":["import {LineBreak} from \"../components/LineBreak\";\nimport {useRef} from \"react\";\nimport ConnectionStatus from \"../components/database_operations/ConnectionStatus\";\nimport CurrentConnectionConfig from \"../components/database_operations/CurrentConnectionConfig\";\n\nfunction ConnectToDB() {\n    const hostInputRef = useRef()\n    const portInputRef = useRef()\n    const databaseInputRef = useRef()\n    const userInputRef = useRef()\n    const passwordInputRef = useRef()\n\n    function submit(event) {\n        event.preventDefault();\n\n        const submittedData = {\n            host: hostInputRef.current.value,\n            port: parseInt(portInputRef.current.value),\n            database: databaseInputRef.current.value,\n            user: userInputRef.current.value,\n            password: passwordInputRef.current.value\n        }\n        const token = sessionStorage.getItem('token');\n        const tokenStr = JSON.parse(token);\n        fetch('http://127.0.0.1:8000/api/v1/database-connections/set-database-config/',\n            {\n                method: \"POST\",\n                body: JSON.stringify(submittedData),\n                headers: {\n                    'Content-Type': \"application/json\",\n                    'Authorization': \"token \" + tokenStr\n                }\n            }\n        );\n    }\n\n    return (\n        <div className='card'>\n            <h2>Connect To Database</h2>\n            <LineBreak/>\n            <form onSubmit={submit}>\n                <div>\n                    <label htmlFor=\"host\">Host: </label>\n                    <input type=\"text\" id=\"host\" ref={hostInputRef} required/>\n                </div>\n                <div>\n                    <label htmlFor=\"port\">Port: </label>\n                    <input type=\"text\" id=\"port\" ref={portInputRef} required/>\n                </div>\n                <div>\n                    <label htmlFor=\"database\">Database: </label>\n                    <input type=\"text\" id=\"database\" ref={databaseInputRef} required/>\n                </div>\n                <div>\n                    <label htmlFor=\"user\">User: </label>\n                    <input type=\"text\" id=\"user\" ref={userInputRef} required/>\n                </div>\n                <div>\n                    <label htmlFor=\"password\">Password: </label>\n                    <input type=\"password\" id=\"password\" ref={passwordInputRef} required/>\n                </div>\n                <br/>\n                <div>\n                    <button className='btn'>Connect</button>\n                </div>\n            </form>\n            <LineBreak/>\n            <h3>Current Connection Config</h3>\n            <CurrentConnectionConfig/>\n            <h3>Connection Status</h3>\n            <ConnectionStatus/>\n        </div>\n    );\n}\n\nexport default ConnectToDB;"]},"metadata":{},"sourceType":"module"}