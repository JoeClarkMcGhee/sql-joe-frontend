{"ast":null,"code":"var _jsxFileName = \"/Users/joeclark-mcghee/Documents/code/computer-science/project/sql-joe-frontend/src/components/database_operations/ResultsTable.js\";\nimport { Component } from \"react\";\nimport Row from \"./Row\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ResultsTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getHeader = function () {\n      let keys = Object.keys(this.props.data[0]);\n      return keys.map(key => {\n        return /*#__PURE__*/_jsxDEV(\"th\", {\n          children: key.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }, this);\n      });\n    };\n\n    this.getRows = function () {\n      let items = this.props.data;\n\n      if (!items.includes(\"bad query\")) {\n        let keys = Object.keys(this.props.data[0]);\n        return items.map(row => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              data: row,\n              keys: keys\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this);\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: this.getHeader()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.getRows()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ResultsTable;","map":{"version":3,"sources":["/Users/joeclark-mcghee/Documents/code/computer-science/project/sql-joe-frontend/src/components/database_operations/ResultsTable.js"],"names":["Component","Row","ResultsTable","constructor","props","getHeader","keys","Object","data","map","key","toUpperCase","getRows","items","includes","row","render"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;;AAGA,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AACjCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAInBC,SAJmB,GAIP,YAAY;AACpB,UAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAY,KAAKF,KAAL,CAAWI,IAAX,CAAgB,CAAhB,CAAZ,CAAX;AACA,aAAOF,IAAI,CAACG,GAAL,CAAUC,GAAD,IAAS;AACrB,4BACI;AAAA,oBACKA,GAAG,CAACC,WAAJ;AADL;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH,OANM,CAAP;AAOH,KAbkB;;AAAA,SAenBC,OAfmB,GAeT,YAAY;AAClB,UAAIC,KAAK,GAAG,KAAKT,KAAL,CAAWI,IAAvB;;AACA,UAAI,CAACK,KAAK,CAACC,QAAN,CAAe,WAAf,CAAL,EAAkC;AAC9B,YAAIR,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAY,KAAKF,KAAL,CAAWI,IAAX,CAAgB,CAAhB,CAAZ,CAAX;AACA,eAAOK,KAAK,CAACJ,GAAN,CAAWM,GAAD,IAAS;AACtB,8BACI;AAAA,mCACI,QAAC,GAAD;AAAK,cAAA,IAAI,EAAEA,GAAX;AAAgB,cAAA,IAAI,EAAET;AAAtB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ;AAKH,SANM,CAAP;AAOH;AACJ,KA3BkB;AAElB;;AA2BDU,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI;AAAA,gCACI;AAAA,oBACK,KAAKX,SAAL;AADL;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAA,oBACC,KAAKO,OAAL;AADD;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AA3CgC;;AA8CrC,eAAeV,YAAf","sourcesContent":["import {Component} from \"react\";\nimport Row from \"./Row\";\n\n\nclass ResultsTable extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    getHeader = function () {\n        let keys = Object.keys(this.props.data[0]);\n        return keys.map((key) => {\n            return (\n                <th>\n                    {key.toUpperCase()}\n                </th>\n            );\n        })\n    }\n\n    getRows = function () {\n        let items = this.props.data;\n        if (!items.includes(\"bad query\")) {\n            let keys = Object.keys(this.props.data[0]);\n            return items.map((row) => {\n                return (\n                    <tr>\n                        <Row data={row} keys={keys}/>\n                    </tr>\n                );\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <table>\n                    <tr>\n                        {this.getHeader()}\n                    </tr>\n                    <tbody>\n                    {this.getRows()}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default ResultsTable;"]},"metadata":{},"sourceType":"module"}