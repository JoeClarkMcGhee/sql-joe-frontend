{"ast":null,"code":"var _jsxFileName = \"/Users/joeclark-mcghee/Documents/code/computer-science/project/sql-joe-frontend/src/pages/LogInForm.js\";\nimport { Component, createRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LogInForm extends Component {\n  constructor(props) {\n    super(props);\n    this.usernameRef = /*#__PURE__*/createRef();\n    this.passwordRef = /*#__PURE__*/createRef();\n    this.submit = this.submit.bind(this);\n    this.state = {\n      invalidLogin: false\n    };\n  }\n\n  submit(event) {\n    event.preventDefault();\n    const credentials = {\n      username: this.usernameRef.current.value,\n      password: this.passwordRef.current.value\n    };\n    fetch(\"http://127.0.0.1:8000/api/v1/dj-rest-auth/login/\", {\n      method: \"POST\",\n      body: JSON.stringify(credentials),\n      headers: {\n        'Content-Type': \"application/json\"\n      }\n    }).then(response => {\n      if (!response.ok) {\n        this.setState({\n          invalidLogin: true\n        });\n      } else {\n        this.setState({\n          invalidLogin: false\n        });\n      }\n\n      return response.json();\n    }).then(data => {\n      this.props.setToken(data.key);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Please log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), this.state.invalidLogin ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Invalid credentials\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 44\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.submit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            ref: this.usernameRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            ref: this.passwordRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            type: \"submit\",\n            children: \"Log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LogInForm;","map":{"version":3,"sources":["/Users/joeclark-mcghee/Documents/code/computer-science/project/sql-joe-frontend/src/pages/LogInForm.js"],"names":["Component","createRef","LogInForm","constructor","props","usernameRef","passwordRef","submit","bind","state","invalidLogin","event","preventDefault","credentials","username","current","value","password","fetch","method","body","JSON","stringify","headers","then","response","ok","setState","json","data","setToken","key","render"],"mappings":";AAAA,SAAQA,SAAR,EAAmBC,SAAnB,QAAmC,OAAnC;;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAE9BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,WAAL,gBAAmBJ,SAAS,EAA5B;AACA,SAAKK,WAAL,gBAAmBL,SAAS,EAA5B;AACA,SAAKM,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE;AADL,KAAb;AAGH;;AAEDH,EAAAA,MAAM,CAACI,KAAD,EAAQ;AACVA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,WAAW,GAAG;AAChBC,MAAAA,QAAQ,EAAE,KAAKT,WAAL,CAAiBU,OAAjB,CAAyBC,KADnB;AAEhBC,MAAAA,QAAQ,EAAE,KAAKX,WAAL,CAAiBS,OAAjB,CAAyBC;AAFnB,KAApB;AAIAE,IAAAA,KAAK,CAAC,kDAAD,EACD;AACIC,MAAAA,MAAM,EAAE,MADZ;AAEIC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,WAAf,CAFV;AAGIU,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAHb,KADC,CAAL,CAQEC,IARF,CAQQC,QAAD,IAAc;AACjB,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AACd,aAAKC,QAAL,CAAc;AAACjB,UAAAA,YAAY,EAAE;AAAf,SAAd;AACH,OAFD,MAEO;AACH,aAAKiB,QAAL,CAAc;AAACjB,UAAAA,YAAY,EAAE;AAAf,SAAd;AACH;;AACD,aAAOe,QAAQ,CAACG,IAAT,EAAP;AACH,KAfD,EAeGJ,IAfH,CAeSK,IAAD,IAAU;AACd,WAAKzB,KAAL,CAAW0B,QAAX,CAAoBD,IAAI,CAACE,GAAzB;AACH,KAjBD;AAkBH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEK,KAAKvB,KAAL,CAAWC,YAAX,gBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA1B,GAAuD,IAF5D,eAGI;AAAM,QAAA,QAAQ,EAAE,KAAKH,MAArB;AAAA,gCACI;AAAA,+CAEI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,GAAG,EAAE,KAAKF;AAA7B;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAA,+CAEI;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,GAAG,EAAE,KAAKC;AAAjC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eASI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,SAAS,EAAC,KAAlB;AAAwB,YAAA,IAAI,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAoBH;;AA3D6B;;AA8DlC,eAAeJ,SAAf","sourcesContent":["import {Component, createRef} from \"react\";\n\nclass LogInForm extends Component {\n\n    constructor(props) {\n        super(props);\n        this.usernameRef = createRef();\n        this.passwordRef = createRef();\n        this.submit = this.submit.bind(this)\n        this.state = {\n            invalidLogin: false\n        }\n    }\n\n    submit(event) {\n        event.preventDefault();\n        const credentials = {\n            username: this.usernameRef.current.value,\n            password: this.passwordRef.current.value\n        }\n        fetch(\"http://127.0.0.1:8000/api/v1/dj-rest-auth/login/\",\n            {\n                method: \"POST\",\n                body: JSON.stringify(credentials),\n                headers: {\n                    'Content-Type': \"application/json\",\n                }\n            }\n        ).then((response) => {\n            if (!response.ok) {\n                this.setState({invalidLogin: true})\n            } else {\n                this.setState({invalidLogin: false})\n            }\n            return response.json()\n        }).then((data) => {\n            this.props.setToken(data.key)\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"login-form\">\n                <h3>Please log in</h3>\n                {this.state.invalidLogin ? <p>Invalid credentials</p> : null}\n                <form onSubmit={this.submit}>\n                    <label>\n                        Username:\n                        <input type=\"text\" ref={this.usernameRef}/>\n                    </label>\n                    <label>\n                        Password:\n                        <input type=\"password\" ref={this.passwordRef}/>\n                    </label>\n                    <div>\n                        <br/>\n                        <button className=\"btn\" type=\"submit\">Log in</button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default LogInForm;"]},"metadata":{},"sourceType":"module"}