{"ast":null,"code":"var _jsxFileName = \"/Users/joeclark-mcghee/Documents/code/computer-science/project/sql-joe-frontend/src/components/database_operations/ResultsTable.js\";\nimport Headers from \"./Headers\";\nimport Row from \"./Row\";\nimport { Component } from \"react\";\nimport { LineBreak } from \"../LineBreak\"; // function ResultsTable(props) {\n//     return (\n//         <table>\n//             <tbody>\n//             <tr>\n//                 <Headers results={props.results}/>\n//             </tr>\n//             {\n//                 props.results.map((row) => {\n//                     return (\n//                         <tr>\n//                             <Row row={row}/>\n//                         </tr>\n//                     )\n//                 })\n//             };\n//             </tbody>\n//         </table>\n//     );\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ResultsTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getKeys = function () {\n      return Object.keys(this.props.data[0]);\n    };\n\n    this.getHeader = function () {\n      var keys = this.getKeys();\n      return keys.map((key, index) => {\n        return /*#__PURE__*/_jsxDEV(\"th\", {\n          children: key.toUpperCase()\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 20\n        }, this);\n      });\n    };\n\n    this.getRowsData = function () {\n      var items = this.props.data;\n      var keys = this.getKeys();\n      return items.map((row, index) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(RenderRow, {\n            data: row,\n            keys: keys\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 20\n        }, this);\n      });\n    };\n\n    this.getHeader = this.getHeader.bind(this);\n    this.getRowsData = this.getRowsData.bind(this);\n    this.getKeys = this.getKeys.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: this.getHeader()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.getRowsData()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst RenderRow = props => {\n  return props.keys.map((key, index) => {\n    return /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.data[key]\n    }, props.data[key], false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }, this);\n  });\n};\n\n_c = RenderRow;\nexport default ResultsTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderRow\");","map":{"version":3,"sources":["/Users/joeclark-mcghee/Documents/code/computer-science/project/sql-joe-frontend/src/components/database_operations/ResultsTable.js"],"names":["Headers","Row","Component","LineBreak","ResultsTable","constructor","props","getKeys","Object","keys","data","getHeader","map","key","index","toUpperCase","getRowsData","items","row","bind","render","RenderRow"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAAQC,SAAR,QAAwB,OAAxB;AACA,SAAQC,SAAR,QAAwB,cAAxB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAGA,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AACjCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAOnBC,OAPmB,GAOT,YAAY;AAClB,aAAOC,MAAM,CAACC,IAAP,CAAY,KAAKH,KAAL,CAAWI,IAAX,CAAgB,CAAhB,CAAZ,CAAP;AACH,KATkB;;AAAA,SAWnBC,SAXmB,GAWP,YAAY;AACpB,UAAIF,IAAI,GAAG,KAAKF,OAAL,EAAX;AACA,aAAOE,IAAI,CAACG,GAAL,CAAS,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC5B,4BAAO;AAAA,oBAAeD,GAAG,CAACE,WAAJ;AAAf,WAASF,GAAT;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFM,CAAP;AAGH,KAhBkB;;AAAA,SAkBnBG,WAlBmB,GAkBL,YAAY;AACtB,UAAIC,KAAK,GAAG,KAAKX,KAAL,CAAWI,IAAvB;AACA,UAAID,IAAI,GAAG,KAAKF,OAAL,EAAX;AACA,aAAOU,KAAK,CAACL,GAAN,CAAU,CAACM,GAAD,EAAMJ,KAAN,KAAgB;AAC7B,4BAAO;AAAA,iCACH,QAAC,SAAD;AAAuB,YAAA,IAAI,EAAEI,GAA7B;AAAkC,YAAA,IAAI,EAAET;AAAxC,aAAgBK,KAAhB;AAAA;AAAA;AAAA;AAAA;AADG,WAASA,KAAT;AAAA;AAAA;AAAA;AAAA,gBAAP;AAGH,OAJM,CAAP;AAKH,KA1BkB;;AAEf,SAAKH,SAAL,GAAiB,KAAKA,SAAL,CAAeQ,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKH,WAAL,GAAmB,KAAKA,WAAL,CAAiBG,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKZ,OAAL,GAAe,KAAKA,OAAL,CAAaY,IAAb,CAAkB,IAAlB,CAAf;AACH;;AAuBDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI;AAAA,gCACI;AAAA,iCACA;AAAA,sBAAK,KAAKT,SAAL;AAAL;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAA,oBACC,KAAKK,WAAL;AADD;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AA3CgC;;AA8CrC,MAAMK,SAAS,GAAIf,KAAD,IAAW;AACzB,SAAOA,KAAK,CAACG,IAAN,CAAWG,GAAX,CAAe,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAClC,wBAAM;AAAA,gBAA2BR,KAAK,CAACI,IAAN,CAAWG,GAAX;AAA3B,OAASP,KAAK,CAACI,IAAN,CAAWG,GAAX,CAAT;AAAA;AAAA;AAAA;AAAA,YAAN;AACH,GAFM,CAAP;AAGH,CAJD;;KAAMQ,S;AAMN,eAAejB,YAAf","sourcesContent":["import Headers from \"./Headers\";\nimport Row from \"./Row\";\nimport {Component} from \"react\";\nimport {LineBreak} from \"../LineBreak\";\n\n// function ResultsTable(props) {\n//     return (\n//         <table>\n//             <tbody>\n//             <tr>\n//                 <Headers results={props.results}/>\n//             </tr>\n//             {\n//                 props.results.map((row) => {\n//                     return (\n//                         <tr>\n//                             <Row row={row}/>\n//                         </tr>\n//                     )\n//                 })\n//             };\n//             </tbody>\n//         </table>\n//     );\n// }\n\n\nclass ResultsTable extends Component {\n    constructor(props) {\n        super(props);\n        this.getHeader = this.getHeader.bind(this);\n        this.getRowsData = this.getRowsData.bind(this);\n        this.getKeys = this.getKeys.bind(this);\n    }\n\n    getKeys = function () {\n        return Object.keys(this.props.data[0]);\n    }\n\n    getHeader = function () {\n        var keys = this.getKeys();\n        return keys.map((key, index) => {\n            return <th key={key}>{key.toUpperCase()}</th>\n        })\n    }\n\n    getRowsData = function () {\n        var items = this.props.data;\n        var keys = this.getKeys();\n        return items.map((row, index) => {\n            return <tr key={index}>\n                <RenderRow key={index} data={row} keys={keys}/>\n            </tr>\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <table>\n                    <thead>\n                    <tr>{this.getHeader()}</tr>\n                    </thead>\n                    <tbody>\n                    {this.getRowsData()}\n                    </tbody>\n                </table>\n            </div>\n\n        );\n    }\n}\n\nconst RenderRow = (props) => {\n    return props.keys.map((key, index) => {\n        return<td key={props.data[key]}>{props.data[key]}</td>\n    })\n}\n\nexport default ResultsTable;"]},"metadata":{},"sourceType":"module"}